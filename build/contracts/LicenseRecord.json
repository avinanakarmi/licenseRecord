{
  "contractName": "LicenseRecord",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "userCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRecord",
      "outputs": [
        {
          "name": "licenseNumber",
          "type": "address"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "phone",
          "type": "string"
        },
        {
          "name": "level",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_phone",
          "type": "string"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_uid",
          "type": "address"
        },
        {
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "issueG1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_uid",
          "type": "address"
        },
        {
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "issueG2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_uid",
          "type": "address"
        },
        {
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "issueG",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_uid",
          "type": "address"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "name": "status",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_uid",
          "type": "address"
        }
      ],
      "name": "checkStatus",
      "outputs": [
        {
          "name": "Level",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOfficer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"address\"}],\"name\":\"validate\",\"outputs\":[{\"name\":\"status\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uid\",\"type\":\"address\"},{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"issueG\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"address\"}],\"name\":\"checkStatus\",\"outputs\":[{\"name\":\"Level\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_phone\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRecord\",\"outputs\":[{\"name\":\"licenseNumber\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"level\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uid\",\"type\":\"address\"},{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"issueG2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOfficer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uid\",\"type\":\"address\"},{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"issueG1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/avina/NodeJS/licenseRecord/contracts/LicenseRecord.sol\":\"LicenseRecord\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/avina/NodeJS/licenseRecord/contracts/LicenseRecord.sol\":{\"keccak256\":\"0xc7e43dd09ad669d4efa114fe37df2517cf1c6e298715f3c958efc8215fb359fd\",\"urls\":[\"bzzr://49d9d896e59bcd2f6aa30b2aa770d1063417bf92d0e748d568015217179f6116\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117fe806100606000396000f3fe608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307973ccf1461009e578063207c64fb146100c95780633071fe9114610193578063340190ec146101f05780633ffbd47f146102ba5780634d87b6931461041957806388c90e53146105975780638e98209b146105f4578063916641ba14610623575b600080fd5b3480156100aa57600080fd5b506100b3610680565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b50610118600480360360208110156100ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610686565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019f57600080fd5b506101ee600480360360408110156101b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610797565b005b3480156101fc57600080fd5b5061023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027f578082015181840152602081019050610264565b50505050905090810190601f1680156102ac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c657600080fd5b50610417600480360360408110156102dd57600080fd5b81019080803590602001906401000000008111156102fa57600080fd5b82018360208201111561030c57600080fd5b8035906020019184600183028401116401000000008311171561032e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561039157600080fd5b8201836020820111156103a357600080fd5b803590602001918460018302840111640100000000831117156103c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610d7a565b005b34801561042557600080fd5b506104686004803603602081101561043c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f26565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018460048111156104b257fe5b60ff168152602001838103835286818151815260200191508051906020019080838360005b838110156104f25780820151818401526020810190506104d7565b50505050905090810190601f16801561051f5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561055857808201518184015260208101905061053d565b50505050905090810190601f1680156105855780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b3480156105a357600080fd5b506105f2600480360360408110156105ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506110b3565b005b34801561060057600080fd5b50610609611310565b604051808215151515815260200191505060405180910390f35b34801561062f57600080fd5b5061067e6004803603604081101561064657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611378565b005b60025481565b606060048081111561069457fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1660048111156106ef57fe5b1415610732576040805190810160405280600581526020017f56616c69640000000000000000000000000000000000000000000000000000008152509050610792565b606060405190810160405280602681526020017f506c6561736520636865636b2073746174757320746f206b6e6f77206d6f726581526020017f20696e666f2e000000000000000000000000000000000000000000000000000081525090505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4163636573732044656e6965642121210000000000000000000000000000000081525060200191505060405180910390fd5b610864826115b0565b15156108fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f43616e646964617465206861736e27742070617373656420547269616c20457881526020017f616d696e6174696f6e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001151581151514156109f15781600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908360048111156109eb57fe5b02179055505b5050565b606060006004811115610a0457fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610a5f57fe5b1415610aa2576040805190810160405280600e81526020017f4e6f7420526567697374657265640000000000000000000000000000000000008152509050610d75565b60016004811115610aaf57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610b0a57fe5b1415610b7457606060405190810160405280602481526020017f5265676973746572656420627574204e6f204578616d696e6174696f6e20506181526020017f73736564000000000000000000000000000000000000000000000000000000008152509050610d75565b60026004811115610b8157fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610bdc57fe5b1415610c1f576040805190810160405280600281526020017f47310000000000000000000000000000000000000000000000000000000000008152509050610d75565b60036004811115610c2c57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610c8757fe5b1415610cca576040805190810160405280600281526020017f47320000000000000000000000000000000000000000000000000000000000008152509050610d75565b600480811115610cd657fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610d3157fe5b1415610d74576040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152509050610d75565b5b919050565b610d833361162f565b151515610df8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f416c726561647920526567697374657265642e0000000000000000000000000081525060200191505060405180910390fd5b600033905082600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610e5392919061172d565b5081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190610eaa92919061172d565b506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690836004811115610f0a57fe5b0217905550600260008154809291906001019190505550505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ff85780601f10610fcd57610100808354040283529160200191610ff8565b820191906000526020600020905b815481529060010190602001808311610fdb57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110965780601f1061106b57610100808354040283529160200191611096565b820191906000526020600020905b81548152906001019060200180831161107957829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611177576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4163636573732044656e6965642121210000000000000000000000000000000081525060200191505060405180910390fd5b611180826116ae565b151561121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f43616e646964617465206861736e277420706173736564205772697474656e2081526020017f4578616d696e6174696f6e00000000000000000000000000000000000000000081525060400191505060405180910390fd5b60011515811515141561130c5781600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083600481111561130657fe5b02179055505b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156113705760019050611375565b600090505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561143c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4163636573732044656e6965642121210000000000000000000000000000000081525060200191505060405180910390fd5b6114458261162f565b15156114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e646964617465206861736e27742072656769737465726564207965742e81525060200191505060405180910390fd5b6001151581151514156115ac5781600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908360048111156115a657fe5b02179055505b5050565b6000600360048111156115bf57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16600481111561161a57fe5b1415611629576001905061162a565b5b919050565b60006001600481111561163e57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16600481111561169957fe5b14156116a857600190506116a9565b5b919050565b6000600260048111156116bd57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16600481111561171857fe5b14156117275760019050611728565b5b919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061176e57805160ff191683800117855561179c565b8280016001018555821561179c579182015b8281111561179b578251825591602001919060010190611780565b5b5090506117a991906117ad565b5090565b6117cf91905b808211156117cb5760008160009055506001016117b3565b5090565b9056fea165627a7a72305820bf4440098ddb41ac4dd023e48cec0ce49d2ed8cbcbcfb1072d6a7b5c451feb5e0029",
  "deployedBytecode": "0x608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307973ccf1461009e578063207c64fb146100c95780633071fe9114610193578063340190ec146101f05780633ffbd47f146102ba5780634d87b6931461041957806388c90e53146105975780638e98209b146105f4578063916641ba14610623575b600080fd5b3480156100aa57600080fd5b506100b3610680565b6040518082815260200191505060405180910390f35b3480156100d557600080fd5b50610118600480360360208110156100ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610686565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019f57600080fd5b506101ee600480360360408110156101b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610797565b005b3480156101fc57600080fd5b5061023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027f578082015181840152602081019050610264565b50505050905090810190601f1680156102ac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c657600080fd5b50610417600480360360408110156102dd57600080fd5b81019080803590602001906401000000008111156102fa57600080fd5b82018360208201111561030c57600080fd5b8035906020019184600183028401116401000000008311171561032e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561039157600080fd5b8201836020820111156103a357600080fd5b803590602001918460018302840111640100000000831117156103c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610d7a565b005b34801561042557600080fd5b506104686004803603602081101561043c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f26565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018460048111156104b257fe5b60ff168152602001838103835286818151815260200191508051906020019080838360005b838110156104f25780820151818401526020810190506104d7565b50505050905090810190601f16801561051f5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561055857808201518184015260208101905061053d565b50505050905090810190601f1680156105855780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b3480156105a357600080fd5b506105f2600480360360408110156105ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506110b3565b005b34801561060057600080fd5b50610609611310565b604051808215151515815260200191505060405180910390f35b34801561062f57600080fd5b5061067e6004803603604081101561064657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611378565b005b60025481565b606060048081111561069457fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1660048111156106ef57fe5b1415610732576040805190810160405280600581526020017f56616c69640000000000000000000000000000000000000000000000000000008152509050610792565b606060405190810160405280602681526020017f506c6561736520636865636b2073746174757320746f206b6e6f77206d6f726581526020017f20696e666f2e000000000000000000000000000000000000000000000000000081525090505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4163636573732044656e6965642121210000000000000000000000000000000081525060200191505060405180910390fd5b610864826115b0565b15156108fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f43616e646964617465206861736e27742070617373656420547269616c20457881526020017f616d696e6174696f6e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001151581151514156109f15781600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908360048111156109eb57fe5b02179055505b5050565b606060006004811115610a0457fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610a5f57fe5b1415610aa2576040805190810160405280600e81526020017f4e6f7420526567697374657265640000000000000000000000000000000000008152509050610d75565b60016004811115610aaf57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610b0a57fe5b1415610b7457606060405190810160405280602481526020017f5265676973746572656420627574204e6f204578616d696e6174696f6e20506181526020017f73736564000000000000000000000000000000000000000000000000000000008152509050610d75565b60026004811115610b8157fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610bdc57fe5b1415610c1f576040805190810160405280600281526020017f47310000000000000000000000000000000000000000000000000000000000008152509050610d75565b60036004811115610c2c57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610c8757fe5b1415610cca576040805190810160405280600281526020017f47320000000000000000000000000000000000000000000000000000000000008152509050610d75565b600480811115610cd657fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166004811115610d3157fe5b1415610d74576040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152509050610d75565b5b919050565b610d833361162f565b151515610df8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f416c726561647920526567697374657265642e0000000000000000000000000081525060200191505060405180910390fd5b600033905082600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610e5392919061172d565b5081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190610eaa92919061172d565b506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690836004811115610f0a57fe5b0217905550600260008154809291906001019190505550505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ff85780601f10610fcd57610100808354040283529160200191610ff8565b820191906000526020600020905b815481529060010190602001808311610fdb57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110965780601f1061106b57610100808354040283529160200191611096565b820191906000526020600020905b81548152906001019060200180831161107957829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611177576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4163636573732044656e6965642121210000000000000000000000000000000081525060200191505060405180910390fd5b611180826116ae565b151561121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f43616e646964617465206861736e277420706173736564205772697474656e2081526020017f4578616d696e6174696f6e00000000000000000000000000000000000000000081525060400191505060405180910390fd5b60011515811515141561130c5781600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083600481111561130657fe5b02179055505b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156113705760019050611375565b600090505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561143c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4163636573732044656e6965642121210000000000000000000000000000000081525060200191505060405180910390fd5b6114458261162f565b15156114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e646964617465206861736e27742072656769737465726564207965742e81525060200191505060405180910390fd5b6001151581151514156115ac5781600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908360048111156115a657fe5b02179055505b5050565b6000600360048111156115bf57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16600481111561161a57fe5b1415611629576001905061162a565b5b919050565b60006001600481111561163e57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16600481111561169957fe5b14156116a857600190506116a9565b5b919050565b6000600260048111156116bd57fe5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16600481111561171857fe5b14156117275760019050611728565b5b919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061176e57805160ff191683800117855561179c565b8280016001018555821561179c579182015b8281111561179b578251825591602001919060010190611780565b5b5090506117a991906117ad565b5090565b6117cf91905b808211156117cb5760008160009055506001016117b3565b5090565b9056fea165627a7a72305820bf4440098ddb41ac4dd023e48cec0ce49d2ed8cbcbcfb1072d6a7b5c451feb5e0029",
  "sourceMap": "27:3679:0:-;;;340:60;8:9:-1;5:2;;;30:1;27;20:12;5:2;340:60:0;382:10;372:7;;:20;;;;;;;;;;;;;;;;;;27:3679;;;;;;",
  "deployedSourceMap": "27:3679:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;98:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;98:21:0;;;;;;;;;;;;;;;;;;;;;;;2435:266;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2435:266:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2435:266:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2435:266:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2126:297;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2126:297:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2126:297:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:722;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2713:722:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2713:722:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2713:722:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;585:376;;8:9:-1;5:2;;;30:1;27;20:12;5:2;585:376:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;585:376:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;585:376:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;585:376:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;585:376:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;585:376:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;585:376:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;585:376:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;585:376:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;585:376:0;;;;;;;;;;;;;;;;;;527:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;527:43:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;527:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;527:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;527:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1643:301;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1643:301:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1643:301:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3441:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3441:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1161:300;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1161:300:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1161:300:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;98:21;;;;:::o;2435:266::-;2487:20;2549:14;2523:40;;;;;;;;:10;:16;2534:4;2523:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:40;;;;;;;;;2519:175;;;2579:14;;;;;;;;;;;;;;;;;;;;;;2519:175;2635:47;;;;;;;;;;;;;;;;;;;;;;;;;2435:266;;;;:::o;2126:297::-;467:7;;;;;;;;;;;453:21;;:10;:21;;;445:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:13;2216:4;2208:7;:13::i;:::-;2200:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:4;2281:16;;:7;:16;;;2278:138;;;2346:4;2313:10;:16;2324:4;2313:16;;;;;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;2390:14;2365:10;:16;2376:4;2365:16;;;;;;;;;;;;;;;:22;;;:39;;;;;;;;;;;;;;;;;;;;;;;;2278:138;2126:297;;:::o;2713:722::-;2768:19;2828:17;2802:43;;;;;;;;:10;:16;2813:4;2802:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:43;;;;;;;;;2799:627;;;2861:23;;;;;;;;;;;;;;;;;;;;;;2799:627;2954:23;2928:49;;;;;;;;:10;:16;2939:4;2928:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:49;;;;;;;;;2925:494;;;2993:45;;;;;;;;;;;;;;;;;;;;;;;;;;;2925:494;3108:15;3082:41;;;;;;;;:10;:16;3093:4;3082:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3079:329;;;3139:11;;;;;;;;;;;;;;;;;;;;;;3079:329;3221:15;3195:41;;;;;;;;:10;:16;3206:4;3195:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3192:205;;;3252:11;;;;;;;;;;;;;;;;;;;;;;3192:205;3334:14;3308:40;;;;;;;;:10;:16;3319:4;3308:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:40;;;;;;;;;3305:81;;;3364:10;;;;;;;;;;;;;;;;;;;;;;3305:81;2713:722;;;;:::o;585:376::-;677:29;695:10;677:17;:29::i;:::-;676:30;668:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;745:12;760:10;745:25;;809:5;785:10;:16;796:4;785:16;;;;;;;;;;;;;;;:21;;:29;;;;;;;;;;;;:::i;:::-;;854:6;829:10;:16;840:4;829:16;;;;;;;;;;;;;;;:22;;:31;;;;;;;;;;;;:::i;:::-;;900:23;875:10;:16;886:4;875:16;;;;;;;;;;;;;;;:22;;;:48;;;;;;;;;;;;;;;;;;;;;;;;938:9;;:11;;;;;;;;;;;;;585:376;;;:::o;527:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1643:301::-;467:7;;;;;;;;;;;453:21;;:10;:21;;;445:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1726:13;1734:4;1726:7;:13::i;:::-;1718:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1813:4;1801:16;;:7;:16;;;1798:139;;;1866:4;1833:10;:16;1844:4;1833:16;;;;;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;1910:15;1885:10;:16;1896:4;1885:16;;;;;;;;;;;;;;;:22;;;:40;;;;;;;;;;;;;;;;;;;;;;;;1798:139;1643:301;;:::o;3441:152::-;3482:4;3516:7;;;;;;;;;;;3502:21;;:10;:21;;;3499:64;;;3547:4;3540:11;;;;3499:64;3580:5;3573:12;;3441:152;;:::o;1161:300::-;467:7;;;;;;;;;;;453:21;;:10;:21;;;445:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:23;1262:4;1244:17;:23::i;:::-;1236:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1330:4;1318:16;;:7;:16;;;1315:139;;;1383:4;1350:10;:16;1361:4;1350:16;;;;;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;1427:15;1402:10;:16;1413:4;1402:16;;;;;;;;;;;;;;;:22;;;:40;;;;;;;;;;;;;;;;;;;;;;;;1315:139;1161:300;;:::o;1956:158::-;2008:4;2053:15;2027:41;;;;;;;;:10;:16;2038:4;2027:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;2024:83;;;2091:4;2084:11;;;;2024:83;1956:158;;;;:::o;973:176::-;1035:4;1080:23;1054:49;;;;;;;;:10;:16;1065:4;1054:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:49;;;;;;;;;1051:91;;;1126:4;1119:11;;;;1051:91;973:176;;;;:::o;1473:158::-;1525:4;1570:15;1544:41;;;;;;;;:10;:16;1555:4;1544:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;1541:83;;;1608:4;1601:11;;;;1541:83;1473:158;;;;:::o;27:3679::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\ncontract LicenseRecord{\r\n    address officer;\r\n    address owner;\r\n    uint public userCount;\r\n    // string status;\r\n    enum licenseLevel {none,registered, g1, g2, g}\r\n\r\n    struct user{\r\n        address licenseNumber;\r\n        string name;\r\n        string phone;\r\n        licenseLevel level;\r\n    }\r\n    \r\n    constructor() public {\r\n        officer = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOfficer(){\r\n        require(msg.sender == officer, \"Access Denied!!!\");\r\n        _;\r\n    }\r\n    \r\n    mapping (address => user) public userRecord;\r\n\r\n    \r\n    function register(string memory _name, string memory _phone) public {\r\n            require(!checkRegistration(msg.sender), \"Already Registered.\");\r\n            address _uid = msg.sender;\r\n            userRecord[_uid].name = _name;\r\n            userRecord[_uid].phone = _phone;\r\n            userRecord[_uid].level = licenseLevel.registered;\r\n            userCount++;\r\n        }\r\n    \r\n    function checkRegistration(address _uid) private view returns(bool){\r\n        if(userRecord[_uid].level == licenseLevel.registered){\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    function issueG1(address _uid, bool _status) onlyOfficer public {\r\n        require(checkRegistration(_uid), \"Candidate hasn't registered yet.\");\r\n        if(_status  == true){\r\n            userRecord[_uid].licenseNumber = _uid;\r\n            userRecord[_uid].level = licenseLevel.g1;\r\n        }\r\n    }\r\n    \r\n    function checkG1(address _uid) private view returns(bool){\r\n        if(userRecord[_uid].level == licenseLevel.g1){\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    function issueG2(address _uid, bool _status) onlyOfficer public {\r\n        require(checkG1(_uid), \"Candidate hasn't passed Written Examination\");\r\n        if(_status  == true){\r\n            userRecord[_uid].licenseNumber = _uid;\r\n            userRecord[_uid].level = licenseLevel.g2;\r\n        }\r\n    }\r\n    \r\n    function checkG2(address _uid) private view returns(bool){\r\n        if(userRecord[_uid].level == licenseLevel.g2){\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    function issueG(address _uid, bool _status) onlyOfficer public {\r\n        require(checkG2(_uid), \"Candidate hasn't passed Trial Examination\");\r\n        if(_status  == true){\r\n            userRecord[_uid].licenseNumber = _uid;\r\n            userRecord[_uid].level = licenseLevel.g;\r\n        }\r\n    }\r\n    \r\n    function validate(address _uid) public view returns(string memory status){\r\n        if (userRecord[_uid].level == licenseLevel.g){\r\n            return \"Valid\";\r\n        }\r\n        else {\r\n            return \"Please check status to know more info.\";\r\n        }\r\n    }\r\n    \r\n    function checkStatus(address _uid) public view returns(string memory Level){\r\n        if(userRecord[_uid].level == licenseLevel.none){\r\n            return \"Not Registered\";\r\n        }\r\n        else{\r\n            if(userRecord[_uid].level == licenseLevel.registered){\r\n            return \"Registered but No Examination Passed\";\r\n        }\r\n        else{\r\n            if(userRecord[_uid].level == licenseLevel.g1){\r\n            return \"G1\";\r\n        }\r\n        else {\r\n            if(userRecord[_uid].level == licenseLevel.g2){\r\n            return \"G2\";\r\n        }\r\n        else {\r\n            if(userRecord[_uid].level == licenseLevel.g){\r\n            return \"G\";\r\n        }\r\n        }\r\n        }\r\n        }\r\n    }\r\n    \r\n}\r\n    function isOfficer() public view returns(bool) {\r\n        if(msg.sender == officer) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //function getAll() public view returns (address[] memory users){\r\n    //    return userList;\r\n    //}\r\n}\r\n",
  "sourcePath": "/home/avina/NodeJS/licenseRecord/contracts/LicenseRecord.sol",
  "ast": {
    "absolutePath": "/home/avina/NodeJS/licenseRecord/contracts/LicenseRecord.sol",
    "exportedSymbols": {
      "LicenseRecord": [
        368
      ]
    },
    "id": 369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 368,
        "linearizedBaseContracts": [
          368
        ],
        "name": "LicenseRecord",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "officer",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "56:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "56:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "78:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "78:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7,
            "name": "userCount",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "98:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "98:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "LicenseRecord.licenseLevel",
            "id": 13,
            "members": [
              {
                "id": 8,
                "name": "none",
                "nodeType": "EnumValue",
                "src": "168:4:0"
              },
              {
                "id": 9,
                "name": "registered",
                "nodeType": "EnumValue",
                "src": "173:10:0"
              },
              {
                "id": 10,
                "name": "g1",
                "nodeType": "EnumValue",
                "src": "185:2:0"
              },
              {
                "id": 11,
                "name": "g2",
                "nodeType": "EnumValue",
                "src": "189:2:0"
              },
              {
                "id": 12,
                "name": "g",
                "nodeType": "EnumValue",
                "src": "193:1:0"
              }
            ],
            "name": "licenseLevel",
            "nodeType": "EnumDefinition",
            "src": "149:46:0"
          },
          {
            "canonicalName": "LicenseRecord.user",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 15,
                "name": "licenseNumber",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "225:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "225:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "257:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 16,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "257:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "name": "phone",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "279:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 18,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "279:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "name": "level",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "302:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_licenseLevel_$13",
                  "typeString": "enum LicenseRecord.licenseLevel"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 20,
                  "name": "licenseLevel",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 13,
                  "src": "302:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_licenseLevel_$13",
                    "typeString": "enum LicenseRecord.licenseLevel"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "user",
            "nodeType": "StructDefinition",
            "scope": 368,
            "src": "203:125:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "361:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25,
                      "name": "officer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "372:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 26,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "382:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "382:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "372:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "372:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "351:2:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:0:0"
            },
            "scope": 368,
            "src": "340:60:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "434:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "453:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "453:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "officer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "467:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "453:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732044656e696564212121",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "476:18:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bbc0f5f60fa507811d964e556572de5c6864d6cb0218b6770b6a6a707f31af7",
                          "typeString": "literal_string \"Access Denied!!!\""
                        },
                        "value": "Access Denied!!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bbc0f5f60fa507811d964e556572de5c6864d6cb0218b6770b6a6a707f31af7",
                          "typeString": "literal_string \"Access Denied!!!\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "445:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "445:50:0"
                },
                {
                  "id": 41,
                  "nodeType": "PlaceholderStatement",
                  "src": "506:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 43,
            "name": "onlyOfficer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:2:0"
            },
            "src": "412:103:0",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47,
            "name": "userRecord",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "527:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
              "typeString": "mapping(address => struct LicenseRecord.user)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "536:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "527:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                "typeString": "mapping(address => struct LicenseRecord.user)"
              },
              "valueType": {
                "contractScope": null,
                "id": 45,
                "name": "user",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 22,
                "src": "547:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_user_$22_storage_ptr",
                  "typeString": "struct LicenseRecord.user"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "653:308:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "676:30:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 56,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "695:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "695:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 55,
                            "name": "checkRegistration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "677:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "677:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920526567697374657265642e",
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "708:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb8b2f587e7fe96dacb046bba2d73398d530c37f24c4f9e128ebbe1f1d278f5",
                          "typeString": "literal_string \"Already Registered.\""
                        },
                        "value": "Already Registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb8b2f587e7fe96dacb046bba2d73398d530c37f24c4f9e128ebbe1f1d278f5",
                          "typeString": "literal_string \"Already Registered.\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "668:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "668:62:0"
                },
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "name": "_uid",
                      "nodeType": "VariableDeclaration",
                      "scope": 93,
                      "src": "745:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "745:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 65,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "760:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "760:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "745:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "785:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 70,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "796:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "785:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "785:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "809:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "785:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "785:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "829:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 77,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "840:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "829:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phone",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "829:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "_phone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "854:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "829:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "829:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "875:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 84,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "886:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "875:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "875:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "900:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "900:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "875:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "875:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "938:11:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "userCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "938:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "938:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "603:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "_phone",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "624:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:43:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:0:0"
            },
            "scope": 368,
            "src": "585:376:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1040:109:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1054:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 103,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "1065:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1054:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1054:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1080:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1080:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "1054:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 111,
                  "nodeType": "IfStatement",
                  "src": "1051:91:0",
                  "trueBody": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "1104:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1126:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 100,
                        "id": 109,
                        "nodeType": "Return",
                        "src": "1119:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkRegistration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1000:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "999:14:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1035:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:6:0"
            },
            "scope": 368,
            "src": "973:176:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1225:236:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 124,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "1262:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 123,
                          "name": "checkRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1244:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1244:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e646964617465206861736e27742072656769737465726564207965742e",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1269:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a83456fc3e5977e10dd756ff11aea2ef0d1a5be455885ec962c6c8eda99c6ee7",
                          "typeString": "literal_string \"Candidate hasn't registered yet.\""
                        },
                        "value": "Candidate hasn't registered yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a83456fc3e5977e10dd756ff11aea2ef0d1a5be455885ec962c6c8eda99c6ee7",
                          "typeString": "literal_string \"Candidate hasn't registered yet.\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "1236:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:68:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "1318:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1330:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1318:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 148,
                  "nodeType": "IfStatement",
                  "src": "1315:139:0",
                  "trueBody": {
                    "id": 147,
                    "nodeType": "Block",
                    "src": "1335:119:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 132,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1350:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 134,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 133,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "1361:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1350:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 135,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "licenseNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "1350:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "1383:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1350:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 139,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1402:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 141,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 140,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "1413:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1402:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "1402:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 143,
                              "name": "licenseLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1427:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                "typeString": "type(enum LicenseRecord.licenseLevel)"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "g1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1427:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "src": "1402:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_licenseLevel_$13",
                            "typeString": "enum LicenseRecord.licenseLevel"
                          }
                        },
                        "id": 146,
                        "nodeType": "ExpressionStatement",
                        "src": "1402:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 119,
                  "name": "onlyOfficer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "1206:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1206:11:0"
              }
            ],
            "name": "issueG1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1178:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1192:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1177:28:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:0"
            },
            "scope": 368,
            "src": "1161:300:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1530:101:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1544:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 159,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "1555:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1544:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1544:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1570:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "g1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1570:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "1544:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 167,
                  "nodeType": "IfStatement",
                  "src": "1541:83:0",
                  "trueBody": {
                    "id": 166,
                    "nodeType": "Block",
                    "src": "1586:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1608:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 156,
                        "id": 165,
                        "nodeType": "Return",
                        "src": "1601:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkG1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1490:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1489:14:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1525:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1524:6:0"
            },
            "scope": 368,
            "src": "1473:158:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1707:237:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1734:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 179,
                          "name": "checkG1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "1726:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1726:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e646964617465206861736e277420706173736564205772697474656e204578616d696e6174696f6e",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1741:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f26a9a1be63a4845c2eb0529e8278fa6cf602153ad1a8dd3c7a0f755373c78f",
                          "typeString": "literal_string \"Candidate hasn't passed Written Examination\""
                        },
                        "value": "Candidate hasn't passed Written Examination"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f26a9a1be63a4845c2eb0529e8278fa6cf602153ad1a8dd3c7a0f755373c78f",
                          "typeString": "literal_string \"Candidate hasn't passed Written Examination\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "1718:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1718:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:69:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "1801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1813:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1801:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 204,
                  "nodeType": "IfStatement",
                  "src": "1798:139:0",
                  "trueBody": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "1818:119:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 188,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1833:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 190,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 189,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "1844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1833:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "licenseNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "1833:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 192,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1866:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1833:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "1833:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 195,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1885:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 197,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 196,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "1896:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1885:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "1885:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "licenseLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1910:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                "typeString": "type(enum LicenseRecord.licenseLevel)"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "g2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1910:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "src": "1885:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_licenseLevel_$13",
                            "typeString": "enum LicenseRecord.licenseLevel"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "1885:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 176,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 175,
                  "name": "onlyOfficer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "1688:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:11:0"
              }
            ],
            "name": "issueG2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1660:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1674:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1659:28:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1707:0:0"
            },
            "scope": 368,
            "src": "1643:301:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "2013:101:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 213,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2027:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 215,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2038:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2027:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2027:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2053:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "g2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2053:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "2027:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 223,
                  "nodeType": "IfStatement",
                  "src": "2024:83:0",
                  "trueBody": {
                    "id": 222,
                    "nodeType": "Block",
                    "src": "2069:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 212,
                        "id": 221,
                        "nodeType": "Return",
                        "src": "2084:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkG2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "1973:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1972:14:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "2008:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2007:6:0"
            },
            "scope": 368,
            "src": "1956:158:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "2189:234:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "2216:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 235,
                          "name": "checkG2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "2208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2208:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e646964617465206861736e27742070617373656420547269616c204578616d696e6174696f6e",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2223:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3002d10d6aded3302d7fd6744f131ee2b136e07614732c327ca57b423879847",
                          "typeString": "literal_string \"Candidate hasn't passed Trial Examination\""
                        },
                        "value": "Candidate hasn't passed Trial Examination"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3002d10d6aded3302d7fd6744f131ee2b136e07614732c327ca57b423879847",
                          "typeString": "literal_string \"Candidate hasn't passed Trial Examination\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "2200:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2200:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:67:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 241,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "2281:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2293:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2281:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 260,
                  "nodeType": "IfStatement",
                  "src": "2278:138:0",
                  "trueBody": {
                    "id": 259,
                    "nodeType": "Block",
                    "src": "2298:118:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 244,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "2313:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 246,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 245,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 227,
                                "src": "2324:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2313:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "licenseNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "2313:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "2346:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2313:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "2313:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 251,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "2365:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 253,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 252,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 227,
                                "src": "2376:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2365:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 254,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "2365:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "licenseLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "2390:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                "typeString": "type(enum LicenseRecord.licenseLevel)"
                              }
                            },
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "g",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2390:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "src": "2365:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_licenseLevel_$13",
                            "typeString": "enum LicenseRecord.licenseLevel"
                          }
                        },
                        "id": 258,
                        "nodeType": "ExpressionStatement",
                        "src": "2365:39:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 232,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 231,
                  "name": "onlyOfficer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "2170:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2170:11:0"
              }
            ],
            "name": "issueG",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "2142:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "2156:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2141:28:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:0:0"
            },
            "scope": 368,
            "src": "2126:297:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2508:193:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 269,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2523:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 271,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "2534:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2523:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2523:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 273,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2549:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "g",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2549:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "2523:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 281,
                    "nodeType": "Block",
                    "src": "2620:74:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "506c6561736520636865636b2073746174757320746f206b6e6f77206d6f726520696e666f2e",
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2642:40:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_59dcbdb99e7e1dd7df78dad48d7c1ac2e96b788240a8352bc8fbdf01d2e85e71",
                            "typeString": "literal_string \"Please check status to know more info.\""
                          },
                          "value": "Please check status to know more info."
                        },
                        "functionReturnParameters": 268,
                        "id": 280,
                        "nodeType": "Return",
                        "src": "2635:47:0"
                      }
                    ]
                  },
                  "id": 282,
                  "nodeType": "IfStatement",
                  "src": "2519:175:0",
                  "trueBody": {
                    "id": 278,
                    "nodeType": "Block",
                    "src": "2564:41:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "56616c6964",
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2586:7:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4d226b48e9c83d6519da2c11594208fd73a82ae3ca1279b808f2fe2dd30ccf5f",
                            "typeString": "literal_string \"Valid\""
                          },
                          "value": "Valid"
                        },
                        "functionReturnParameters": 268,
                        "id": 277,
                        "nodeType": "Return",
                        "src": "2579:14:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2453:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2453:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2452:14:0"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2487:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2486:22:0"
            },
            "scope": 368,
            "src": "2435:266:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "2788:647:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 291,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2802:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 293,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 292,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "2813:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2802:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2802:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2828:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "none",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2828:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "2802:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "2910:516:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_licenseLevel_$13",
                            "typeString": "enum LicenseRecord.licenseLevel"
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 301,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "2928:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 303,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 302,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "2939:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2928:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "2928:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 305,
                              "name": "licenseLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                "typeString": "type(enum LicenseRecord.licenseLevel)"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "registered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2954:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "src": "2928:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 346,
                          "nodeType": "Block",
                          "src": "3064:355:0",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_enum$_licenseLevel_$13",
                                  "typeString": "enum LicenseRecord.licenseLevel"
                                },
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 311,
                                      "name": "userRecord",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 47,
                                      "src": "3082:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                        "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                      }
                                    },
                                    "id": 313,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 312,
                                      "name": "_uid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 286,
                                      "src": "3093:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3082:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_user_$22_storage",
                                      "typeString": "struct LicenseRecord.user storage ref"
                                    }
                                  },
                                  "id": 314,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "level",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "3082:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_licenseLevel_$13",
                                    "typeString": "enum LicenseRecord.licenseLevel"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 315,
                                    "name": "licenseLevel",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13,
                                    "src": "3108:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                      "typeString": "type(enum LicenseRecord.licenseLevel)"
                                    }
                                  },
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "g1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3108:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_licenseLevel_$13",
                                    "typeString": "enum LicenseRecord.licenseLevel"
                                  }
                                },
                                "src": "3082:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 344,
                                "nodeType": "Block",
                                "src": "3177:231:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                                        "typeString": "enum LicenseRecord.licenseLevel"
                                      },
                                      "id": 327,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 321,
                                            "name": "userRecord",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 47,
                                            "src": "3195:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                              "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                            }
                                          },
                                          "id": 323,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 322,
                                            "name": "_uid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 286,
                                            "src": "3206:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3195:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_user_$22_storage",
                                            "typeString": "struct LicenseRecord.user storage ref"
                                          }
                                        },
                                        "id": 324,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "level",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21,
                                        "src": "3195:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_licenseLevel_$13",
                                          "typeString": "enum LicenseRecord.licenseLevel"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 325,
                                          "name": "licenseLevel",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 13,
                                          "src": "3221:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                            "typeString": "type(enum LicenseRecord.licenseLevel)"
                                          }
                                        },
                                        "id": 326,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "g2",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "3221:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_licenseLevel_$13",
                                          "typeString": "enum LicenseRecord.licenseLevel"
                                        }
                                      },
                                      "src": "3195:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 342,
                                      "nodeType": "Block",
                                      "src": "3290:107:0",
                                      "statements": [
                                        {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                                              "typeString": "enum LicenseRecord.licenseLevel"
                                            },
                                            "id": 337,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 331,
                                                  "name": "userRecord",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 47,
                                                  "src": "3308:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                                    "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                                  }
                                                },
                                                "id": 333,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 332,
                                                  "name": "_uid",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 286,
                                                  "src": "3319:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "3308:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_user_$22_storage",
                                                  "typeString": "struct LicenseRecord.user storage ref"
                                                }
                                              },
                                              "id": 334,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "level",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21,
                                              "src": "3308:22:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_licenseLevel_$13",
                                                "typeString": "enum LicenseRecord.licenseLevel"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 335,
                                                "name": "licenseLevel",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 13,
                                                "src": "3334:12:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                                  "typeString": "type(enum LicenseRecord.licenseLevel)"
                                                }
                                              },
                                              "id": 336,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "g",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "3334:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_licenseLevel_$13",
                                                "typeString": "enum LicenseRecord.licenseLevel"
                                              }
                                            },
                                            "src": "3308:40:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": null,
                                          "id": 341,
                                          "nodeType": "IfStatement",
                                          "src": "3305:81:0",
                                          "trueBody": {
                                            "id": 340,
                                            "nodeType": "Block",
                                            "src": "3349:37:0",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "47",
                                                  "id": 338,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "string",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "3371:3:0",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d2",
                                                    "typeString": "literal_string \"G\""
                                                  },
                                                  "value": "G"
                                                },
                                                "functionReturnParameters": 290,
                                                "id": 339,
                                                "nodeType": "Return",
                                                "src": "3364:10:0"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "id": 343,
                                    "nodeType": "IfStatement",
                                    "src": "3192:205:0",
                                    "trueBody": {
                                      "id": 330,
                                      "nodeType": "Block",
                                      "src": "3237:38:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "hexValue": "4732",
                                            "id": 328,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3259:4:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_1a7a1daa878528015634237a65af5f902873b7aa5fffc5f64f00441974c14128",
                                              "typeString": "literal_string \"G2\""
                                            },
                                            "value": "G2"
                                          },
                                          "functionReturnParameters": 290,
                                          "id": 329,
                                          "nodeType": "Return",
                                          "src": "3252:11:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 345,
                              "nodeType": "IfStatement",
                              "src": "3079:329:0",
                              "trueBody": {
                                "id": 320,
                                "nodeType": "Block",
                                "src": "3124:38:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "hexValue": "4731",
                                      "id": 318,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3146:4:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_a45073a07121df8f9aa7ad62ac8461a19bb5ff93cddf9010491f1633bd4026c5",
                                        "typeString": "literal_string \"G1\""
                                      },
                                      "value": "G1"
                                    },
                                    "functionReturnParameters": 290,
                                    "id": 319,
                                    "nodeType": "Return",
                                    "src": "3139:11:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 347,
                        "nodeType": "IfStatement",
                        "src": "2925:494:0",
                        "trueBody": {
                          "id": 310,
                          "nodeType": "Block",
                          "src": "2978:72:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "5265676973746572656420627574204e6f204578616d696e6174696f6e20506173736564",
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3000:38:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_45efd9c3b77bdd23ed1fb3008a1609b07b4658bad82af6bcf2293f4c1cf8fd7b",
                                  "typeString": "literal_string \"Registered but No Examination Passed\""
                                },
                                "value": "Registered but No Examination Passed"
                              },
                              "functionReturnParameters": 290,
                              "id": 309,
                              "nodeType": "Return",
                              "src": "2993:45:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 349,
                  "nodeType": "IfStatement",
                  "src": "2799:627:0",
                  "trueBody": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "2846:50:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "4e6f742052656769737465726564",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2868:16:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_279c0ea9163cf45d82caf85324f7fb9c65addae635214d60f5bf1a79fd93b070",
                            "typeString": "literal_string \"Not Registered\""
                          },
                          "value": "Not Registered"
                        },
                        "functionReturnParameters": 290,
                        "id": 299,
                        "nodeType": "Return",
                        "src": "2861:23:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "2734:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2733:14:0"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "name": "Level",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "2768:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2767:21:0"
            },
            "scope": 368,
            "src": "2713:722:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "3488:105:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 356,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "3502:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3502:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 358,
                      "name": "officer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "3516:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3502:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 363,
                  "nodeType": "IfStatement",
                  "src": "3499:64:0",
                  "trueBody": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "3525:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3547:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 355,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "3540:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3580:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 355,
                  "id": 365,
                  "nodeType": "Return",
                  "src": "3573:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOfficer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3459:2:0"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3482:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3481:6:0"
            },
            "scope": 368,
            "src": "3441:152:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 369,
        "src": "27:3679:0"
      }
    ],
    "src": "0:3708:0"
  },
  "legacyAST": {
    "absolutePath": "/home/avina/NodeJS/licenseRecord/contracts/LicenseRecord.sol",
    "exportedSymbols": {
      "LicenseRecord": [
        368
      ]
    },
    "id": 369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 368,
        "linearizedBaseContracts": [
          368
        ],
        "name": "LicenseRecord",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "officer",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "56:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "56:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "78:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "78:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7,
            "name": "userCount",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "98:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "98:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "LicenseRecord.licenseLevel",
            "id": 13,
            "members": [
              {
                "id": 8,
                "name": "none",
                "nodeType": "EnumValue",
                "src": "168:4:0"
              },
              {
                "id": 9,
                "name": "registered",
                "nodeType": "EnumValue",
                "src": "173:10:0"
              },
              {
                "id": 10,
                "name": "g1",
                "nodeType": "EnumValue",
                "src": "185:2:0"
              },
              {
                "id": 11,
                "name": "g2",
                "nodeType": "EnumValue",
                "src": "189:2:0"
              },
              {
                "id": 12,
                "name": "g",
                "nodeType": "EnumValue",
                "src": "193:1:0"
              }
            ],
            "name": "licenseLevel",
            "nodeType": "EnumDefinition",
            "src": "149:46:0"
          },
          {
            "canonicalName": "LicenseRecord.user",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 15,
                "name": "licenseNumber",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "225:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "225:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "257:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 16,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "257:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "name": "phone",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "279:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 18,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "279:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "name": "level",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "302:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_licenseLevel_$13",
                  "typeString": "enum LicenseRecord.licenseLevel"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 20,
                  "name": "licenseLevel",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 13,
                  "src": "302:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_licenseLevel_$13",
                    "typeString": "enum LicenseRecord.licenseLevel"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "user",
            "nodeType": "StructDefinition",
            "scope": 368,
            "src": "203:125:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "361:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25,
                      "name": "officer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "372:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 26,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "382:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "382:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "372:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "372:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "351:2:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:0:0"
            },
            "scope": 368,
            "src": "340:60:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "434:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "453:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "453:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "officer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "467:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "453:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636573732044656e696564212121",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "476:18:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bbc0f5f60fa507811d964e556572de5c6864d6cb0218b6770b6a6a707f31af7",
                          "typeString": "literal_string \"Access Denied!!!\""
                        },
                        "value": "Access Denied!!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bbc0f5f60fa507811d964e556572de5c6864d6cb0218b6770b6a6a707f31af7",
                          "typeString": "literal_string \"Access Denied!!!\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "445:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "445:50:0"
                },
                {
                  "id": 41,
                  "nodeType": "PlaceholderStatement",
                  "src": "506:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 43,
            "name": "onlyOfficer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:2:0"
            },
            "src": "412:103:0",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47,
            "name": "userRecord",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "527:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
              "typeString": "mapping(address => struct LicenseRecord.user)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "536:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "527:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                "typeString": "mapping(address => struct LicenseRecord.user)"
              },
              "valueType": {
                "contractScope": null,
                "id": 45,
                "name": "user",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 22,
                "src": "547:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_user_$22_storage_ptr",
                  "typeString": "struct LicenseRecord.user"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "653:308:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "676:30:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 56,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "695:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "695:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 55,
                            "name": "checkRegistration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "677:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "677:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920526567697374657265642e",
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "708:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb8b2f587e7fe96dacb046bba2d73398d530c37f24c4f9e128ebbe1f1d278f5",
                          "typeString": "literal_string \"Already Registered.\""
                        },
                        "value": "Already Registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb8b2f587e7fe96dacb046bba2d73398d530c37f24c4f9e128ebbe1f1d278f5",
                          "typeString": "literal_string \"Already Registered.\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "668:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "668:62:0"
                },
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "name": "_uid",
                      "nodeType": "VariableDeclaration",
                      "scope": 93,
                      "src": "745:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "745:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 65,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "760:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "760:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "745:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "785:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 70,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "796:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "785:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "785:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "809:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "785:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "785:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "829:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 77,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "840:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "829:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phone",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "829:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "_phone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "854:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "829:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "829:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "875:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 84,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "886:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "875:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "875:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "900:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "900:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "875:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "875:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "938:11:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "userCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "938:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "938:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "603:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "_phone",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "624:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:43:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:0:0"
            },
            "scope": 368,
            "src": "585:376:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1040:109:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1054:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 103,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "1065:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1054:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1054:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1080:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1080:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "1054:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 111,
                  "nodeType": "IfStatement",
                  "src": "1051:91:0",
                  "trueBody": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "1104:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1126:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 100,
                        "id": 109,
                        "nodeType": "Return",
                        "src": "1119:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkRegistration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1000:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "999:14:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1035:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:6:0"
            },
            "scope": 368,
            "src": "973:176:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1225:236:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 124,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "1262:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 123,
                          "name": "checkRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1244:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1244:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e646964617465206861736e27742072656769737465726564207965742e",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1269:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a83456fc3e5977e10dd756ff11aea2ef0d1a5be455885ec962c6c8eda99c6ee7",
                          "typeString": "literal_string \"Candidate hasn't registered yet.\""
                        },
                        "value": "Candidate hasn't registered yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a83456fc3e5977e10dd756ff11aea2ef0d1a5be455885ec962c6c8eda99c6ee7",
                          "typeString": "literal_string \"Candidate hasn't registered yet.\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "1236:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:68:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "1318:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1330:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1318:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 148,
                  "nodeType": "IfStatement",
                  "src": "1315:139:0",
                  "trueBody": {
                    "id": 147,
                    "nodeType": "Block",
                    "src": "1335:119:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 132,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1350:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 134,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 133,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "1361:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1350:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 135,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "licenseNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "1350:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "1383:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1350:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 139,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1402:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 141,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 140,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "1413:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1402:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "1402:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 143,
                              "name": "licenseLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1427:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                "typeString": "type(enum LicenseRecord.licenseLevel)"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "g1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1427:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "src": "1402:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_licenseLevel_$13",
                            "typeString": "enum LicenseRecord.licenseLevel"
                          }
                        },
                        "id": 146,
                        "nodeType": "ExpressionStatement",
                        "src": "1402:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 119,
                  "name": "onlyOfficer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "1206:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1206:11:0"
              }
            ],
            "name": "issueG1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1178:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1192:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1177:28:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:0"
            },
            "scope": 368,
            "src": "1161:300:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1530:101:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1544:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 159,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "1555:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1544:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1544:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1570:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "g1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1570:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "1544:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 167,
                  "nodeType": "IfStatement",
                  "src": "1541:83:0",
                  "trueBody": {
                    "id": 166,
                    "nodeType": "Block",
                    "src": "1586:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1608:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 156,
                        "id": 165,
                        "nodeType": "Return",
                        "src": "1601:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkG1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1490:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1489:14:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1525:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1524:6:0"
            },
            "scope": 368,
            "src": "1473:158:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1707:237:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1734:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 179,
                          "name": "checkG1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "1726:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1726:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e646964617465206861736e277420706173736564205772697474656e204578616d696e6174696f6e",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1741:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f26a9a1be63a4845c2eb0529e8278fa6cf602153ad1a8dd3c7a0f755373c78f",
                          "typeString": "literal_string \"Candidate hasn't passed Written Examination\""
                        },
                        "value": "Candidate hasn't passed Written Examination"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f26a9a1be63a4845c2eb0529e8278fa6cf602153ad1a8dd3c7a0f755373c78f",
                          "typeString": "literal_string \"Candidate hasn't passed Written Examination\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "1718:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1718:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:69:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "1801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1813:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1801:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 204,
                  "nodeType": "IfStatement",
                  "src": "1798:139:0",
                  "trueBody": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "1818:119:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 188,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1833:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 190,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 189,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "1844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1833:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "licenseNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "1833:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 192,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1866:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1833:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "1833:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 195,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1885:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 197,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 196,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "1896:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1885:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "1885:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "licenseLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1910:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                "typeString": "type(enum LicenseRecord.licenseLevel)"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "g2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1910:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "src": "1885:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_licenseLevel_$13",
                            "typeString": "enum LicenseRecord.licenseLevel"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "1885:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 176,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 175,
                  "name": "onlyOfficer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "1688:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:11:0"
              }
            ],
            "name": "issueG2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1660:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1674:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1659:28:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1707:0:0"
            },
            "scope": 368,
            "src": "1643:301:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "2013:101:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 213,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2027:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 215,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2038:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2027:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2027:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2053:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "g2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2053:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "2027:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 223,
                  "nodeType": "IfStatement",
                  "src": "2024:83:0",
                  "trueBody": {
                    "id": 222,
                    "nodeType": "Block",
                    "src": "2069:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 212,
                        "id": 221,
                        "nodeType": "Return",
                        "src": "2084:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkG2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "1973:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1972:14:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "2008:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2007:6:0"
            },
            "scope": 368,
            "src": "1956:158:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "2189:234:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "2216:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 235,
                          "name": "checkG2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "2208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2208:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e646964617465206861736e27742070617373656420547269616c204578616d696e6174696f6e",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2223:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3002d10d6aded3302d7fd6744f131ee2b136e07614732c327ca57b423879847",
                          "typeString": "literal_string \"Candidate hasn't passed Trial Examination\""
                        },
                        "value": "Candidate hasn't passed Trial Examination"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3002d10d6aded3302d7fd6744f131ee2b136e07614732c327ca57b423879847",
                          "typeString": "literal_string \"Candidate hasn't passed Trial Examination\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        443,
                        444
                      ],
                      "referencedDeclaration": 444,
                      "src": "2200:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2200:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:67:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 241,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "2281:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2293:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2281:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 260,
                  "nodeType": "IfStatement",
                  "src": "2278:138:0",
                  "trueBody": {
                    "id": 259,
                    "nodeType": "Block",
                    "src": "2298:118:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 244,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "2313:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 246,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 245,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 227,
                                "src": "2324:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2313:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "licenseNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "2313:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "_uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "2346:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2313:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "2313:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 251,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "2365:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 253,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 252,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 227,
                                "src": "2376:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2365:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 254,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "2365:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "licenseLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "2390:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                "typeString": "type(enum LicenseRecord.licenseLevel)"
                              }
                            },
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "g",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2390:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "src": "2365:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_licenseLevel_$13",
                            "typeString": "enum LicenseRecord.licenseLevel"
                          }
                        },
                        "id": 258,
                        "nodeType": "ExpressionStatement",
                        "src": "2365:39:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 232,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 231,
                  "name": "onlyOfficer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "2170:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2170:11:0"
              }
            ],
            "name": "issueG",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "2142:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "2156:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2141:28:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:0:0"
            },
            "scope": 368,
            "src": "2126:297:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2508:193:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 269,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2523:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 271,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "2534:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2523:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2523:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 273,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2549:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "g",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2549:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "2523:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 281,
                    "nodeType": "Block",
                    "src": "2620:74:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "506c6561736520636865636b2073746174757320746f206b6e6f77206d6f726520696e666f2e",
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2642:40:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_59dcbdb99e7e1dd7df78dad48d7c1ac2e96b788240a8352bc8fbdf01d2e85e71",
                            "typeString": "literal_string \"Please check status to know more info.\""
                          },
                          "value": "Please check status to know more info."
                        },
                        "functionReturnParameters": 268,
                        "id": 280,
                        "nodeType": "Return",
                        "src": "2635:47:0"
                      }
                    ]
                  },
                  "id": 282,
                  "nodeType": "IfStatement",
                  "src": "2519:175:0",
                  "trueBody": {
                    "id": 278,
                    "nodeType": "Block",
                    "src": "2564:41:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "56616c6964",
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2586:7:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4d226b48e9c83d6519da2c11594208fd73a82ae3ca1279b808f2fe2dd30ccf5f",
                            "typeString": "literal_string \"Valid\""
                          },
                          "value": "Valid"
                        },
                        "functionReturnParameters": 268,
                        "id": 277,
                        "nodeType": "Return",
                        "src": "2579:14:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2453:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2453:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2452:14:0"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2487:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2486:22:0"
            },
            "scope": 368,
            "src": "2435:266:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "2788:647:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_licenseLevel_$13",
                      "typeString": "enum LicenseRecord.licenseLevel"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 291,
                          "name": "userRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2802:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                            "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                          }
                        },
                        "id": 293,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 292,
                          "name": "_uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "2813:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2802:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$22_storage",
                          "typeString": "struct LicenseRecord.user storage ref"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2802:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "licenseLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2828:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                          "typeString": "type(enum LicenseRecord.licenseLevel)"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "none",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2828:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                        "typeString": "enum LicenseRecord.licenseLevel"
                      }
                    },
                    "src": "2802:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "2910:516:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_licenseLevel_$13",
                            "typeString": "enum LicenseRecord.licenseLevel"
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 301,
                                "name": "userRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "2928:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                  "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                }
                              },
                              "id": 303,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 302,
                                "name": "_uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "2939:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2928:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_$22_storage",
                                "typeString": "struct LicenseRecord.user storage ref"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "2928:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 305,
                              "name": "licenseLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                "typeString": "type(enum LicenseRecord.licenseLevel)"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "registered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2954:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                              "typeString": "enum LicenseRecord.licenseLevel"
                            }
                          },
                          "src": "2928:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 346,
                          "nodeType": "Block",
                          "src": "3064:355:0",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_enum$_licenseLevel_$13",
                                  "typeString": "enum LicenseRecord.licenseLevel"
                                },
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 311,
                                      "name": "userRecord",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 47,
                                      "src": "3082:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                        "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                      }
                                    },
                                    "id": 313,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 312,
                                      "name": "_uid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 286,
                                      "src": "3093:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3082:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_user_$22_storage",
                                      "typeString": "struct LicenseRecord.user storage ref"
                                    }
                                  },
                                  "id": 314,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "level",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "3082:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_licenseLevel_$13",
                                    "typeString": "enum LicenseRecord.licenseLevel"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 315,
                                    "name": "licenseLevel",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13,
                                    "src": "3108:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                      "typeString": "type(enum LicenseRecord.licenseLevel)"
                                    }
                                  },
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "g1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3108:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_licenseLevel_$13",
                                    "typeString": "enum LicenseRecord.licenseLevel"
                                  }
                                },
                                "src": "3082:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 344,
                                "nodeType": "Block",
                                "src": "3177:231:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_licenseLevel_$13",
                                        "typeString": "enum LicenseRecord.licenseLevel"
                                      },
                                      "id": 327,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 321,
                                            "name": "userRecord",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 47,
                                            "src": "3195:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                              "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                            }
                                          },
                                          "id": 323,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 322,
                                            "name": "_uid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 286,
                                            "src": "3206:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3195:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_user_$22_storage",
                                            "typeString": "struct LicenseRecord.user storage ref"
                                          }
                                        },
                                        "id": 324,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "level",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21,
                                        "src": "3195:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_licenseLevel_$13",
                                          "typeString": "enum LicenseRecord.licenseLevel"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 325,
                                          "name": "licenseLevel",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 13,
                                          "src": "3221:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                            "typeString": "type(enum LicenseRecord.licenseLevel)"
                                          }
                                        },
                                        "id": 326,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "g2",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "3221:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_licenseLevel_$13",
                                          "typeString": "enum LicenseRecord.licenseLevel"
                                        }
                                      },
                                      "src": "3195:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 342,
                                      "nodeType": "Block",
                                      "src": "3290:107:0",
                                      "statements": [
                                        {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_licenseLevel_$13",
                                              "typeString": "enum LicenseRecord.licenseLevel"
                                            },
                                            "id": 337,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 331,
                                                  "name": "userRecord",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 47,
                                                  "src": "3308:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$22_storage_$",
                                                    "typeString": "mapping(address => struct LicenseRecord.user storage ref)"
                                                  }
                                                },
                                                "id": 333,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 332,
                                                  "name": "_uid",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 286,
                                                  "src": "3319:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "3308:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_user_$22_storage",
                                                  "typeString": "struct LicenseRecord.user storage ref"
                                                }
                                              },
                                              "id": 334,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "level",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21,
                                              "src": "3308:22:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_licenseLevel_$13",
                                                "typeString": "enum LicenseRecord.licenseLevel"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 335,
                                                "name": "licenseLevel",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 13,
                                                "src": "3334:12:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_licenseLevel_$13_$",
                                                  "typeString": "type(enum LicenseRecord.licenseLevel)"
                                                }
                                              },
                                              "id": 336,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "g",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "3334:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_licenseLevel_$13",
                                                "typeString": "enum LicenseRecord.licenseLevel"
                                              }
                                            },
                                            "src": "3308:40:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": null,
                                          "id": 341,
                                          "nodeType": "IfStatement",
                                          "src": "3305:81:0",
                                          "trueBody": {
                                            "id": 340,
                                            "nodeType": "Block",
                                            "src": "3349:37:0",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "47",
                                                  "id": 338,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "string",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "3371:3:0",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d2",
                                                    "typeString": "literal_string \"G\""
                                                  },
                                                  "value": "G"
                                                },
                                                "functionReturnParameters": 290,
                                                "id": 339,
                                                "nodeType": "Return",
                                                "src": "3364:10:0"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "id": 343,
                                    "nodeType": "IfStatement",
                                    "src": "3192:205:0",
                                    "trueBody": {
                                      "id": 330,
                                      "nodeType": "Block",
                                      "src": "3237:38:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "hexValue": "4732",
                                            "id": 328,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3259:4:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_1a7a1daa878528015634237a65af5f902873b7aa5fffc5f64f00441974c14128",
                                              "typeString": "literal_string \"G2\""
                                            },
                                            "value": "G2"
                                          },
                                          "functionReturnParameters": 290,
                                          "id": 329,
                                          "nodeType": "Return",
                                          "src": "3252:11:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 345,
                              "nodeType": "IfStatement",
                              "src": "3079:329:0",
                              "trueBody": {
                                "id": 320,
                                "nodeType": "Block",
                                "src": "3124:38:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "hexValue": "4731",
                                      "id": 318,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3146:4:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_a45073a07121df8f9aa7ad62ac8461a19bb5ff93cddf9010491f1633bd4026c5",
                                        "typeString": "literal_string \"G1\""
                                      },
                                      "value": "G1"
                                    },
                                    "functionReturnParameters": 290,
                                    "id": 319,
                                    "nodeType": "Return",
                                    "src": "3139:11:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 347,
                        "nodeType": "IfStatement",
                        "src": "2925:494:0",
                        "trueBody": {
                          "id": 310,
                          "nodeType": "Block",
                          "src": "2978:72:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "5265676973746572656420627574204e6f204578616d696e6174696f6e20506173736564",
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3000:38:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_45efd9c3b77bdd23ed1fb3008a1609b07b4658bad82af6bcf2293f4c1cf8fd7b",
                                  "typeString": "literal_string \"Registered but No Examination Passed\""
                                },
                                "value": "Registered but No Examination Passed"
                              },
                              "functionReturnParameters": 290,
                              "id": 309,
                              "nodeType": "Return",
                              "src": "2993:45:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 349,
                  "nodeType": "IfStatement",
                  "src": "2799:627:0",
                  "trueBody": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "2846:50:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "4e6f742052656769737465726564",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2868:16:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_279c0ea9163cf45d82caf85324f7fb9c65addae635214d60f5bf1a79fd93b070",
                            "typeString": "literal_string \"Not Registered\""
                          },
                          "value": "Not Registered"
                        },
                        "functionReturnParameters": 290,
                        "id": 299,
                        "nodeType": "Return",
                        "src": "2861:23:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "name": "_uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "2734:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2733:14:0"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "name": "Level",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "2768:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2767:21:0"
            },
            "scope": 368,
            "src": "2713:722:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "3488:105:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 356,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "3502:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3502:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 358,
                      "name": "officer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "3516:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3502:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 363,
                  "nodeType": "IfStatement",
                  "src": "3499:64:0",
                  "trueBody": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "3525:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3547:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 355,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "3540:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3580:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 355,
                  "id": 365,
                  "nodeType": "Return",
                  "src": "3573:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOfficer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3459:2:0"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3482:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3481:6:0"
            },
            "scope": 368,
            "src": "3441:152:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 369,
        "src": "27:3679:0"
      }
    ],
    "src": "0:3708:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xDada77b7310Bb631920a320AC53057eaa0aC539c",
      "transactionHash": "0x8e1c7d48260a76b48f1e3bfe6075cdf62f77cb9a9a7655e0425b47677612d86b"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xe417c13833119bC6B29F6a4d7641a70c759c77C5",
      "transactionHash": "0x91dc0dfc74c4eb8514ad1237c1b30aaf47a3c876f94544a256eb6b0e44bcdbbf"
    },
    "1591499294530": {
      "events": {},
      "links": {},
      "address": "0x4Ba7ED3775b7278CAb7008ba94012aB7Fc51547c",
      "transactionHash": "0x1fd34b6516185e290a8f455302ef1caa84829f68083d1f5a6614d1b1386d1cbd"
    },
    "1591522992177": {
      "events": {},
      "links": {},
      "address": "0xf7d6706e0f18A545306cD22dfe279B16c4b1987f",
      "transactionHash": "0x814bc4da30b51c9f0eb7cbf15c45d62bef34f88f081936d328bc2413169ad746"
    },
    "1591524003313": {
      "events": {},
      "links": {},
      "address": "0x4CA1c3f21Eb78774E3480FF4F7Fa0eBAE1fc575b",
      "transactionHash": "0x9e93150b1a2941347a2404327be7d07d90b9ea7f4043b9ab069326c1317d0bfe"
    },
    "1591533152666": {
      "events": {},
      "links": {},
      "address": "0x4CA1c3f21Eb78774E3480FF4F7Fa0eBAE1fc575b",
      "transactionHash": "0x9e93150b1a2941347a2404327be7d07d90b9ea7f4043b9ab069326c1317d0bfe"
    },
    "1591533528130": {
      "events": {},
      "links": {},
      "address": "0xA112a9096D42d9d715BB91209Ecb5BB4183D37C2",
      "transactionHash": "0x9e93150b1a2941347a2404327be7d07d90b9ea7f4043b9ab069326c1317d0bfe"
    },
    "1591545466568": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591580190522": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591583723324": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591586765829": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591596230285": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591616802210": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591623204888": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591650552610": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591652522468": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    },
    "1591680554396": {
      "events": {},
      "links": {},
      "address": "0x2Bf521a03f1720ee6b7Cdf2dE2FA2916CF58d4Dd",
      "transactionHash": "0x9c03347697fb9a4bd8b6cc209d46dfc15e5a57e00998a7dd358ae60c9e8bfacc"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-09T05:29:26.509Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}